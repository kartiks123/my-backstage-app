{"version":3,"file":"index.esm.js","sources":["../src/api/client.ts","../src/api/types.ts","../src/routes.ts","../src/plugin.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OAuthApi, createApiRef, FetchApi } from '@backstage/core-plugin-api';\nimport { GCalendarEvent, GCalendarList } from './types';\nimport { ResponseError } from '@backstage/errors';\n\n/** @public */\nexport const gcalendarApiRef = createApiRef<GCalendarApiClient>({\n  id: 'plugin.gcalendar.service',\n});\n\n/** @public */\nexport class GCalendarApiClient {\n  private readonly authApi: OAuthApi;\n  private readonly fetchApi: FetchApi;\n\n  constructor(options: { authApi: OAuthApi; fetchApi: FetchApi }) {\n    this.authApi = options.authApi;\n    this.fetchApi = options.fetchApi;\n  }\n\n  private async get<T>(\n    path: string,\n    params: { [key in string]: any },\n  ): Promise<T> {\n    const query = new URLSearchParams(params);\n    const url = new URL(\n      `${path}?${query.toString()}`,\n      'https://www.googleapis.com',\n    );\n    const token = await this.authApi.getAccessToken();\n    const response = await this.fetchApi.fetch(url.toString(), {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n\n    if (!response.ok) {\n      throw await ResponseError.fromResponse(response);\n    }\n\n    return response.json() as Promise<T>;\n  }\n\n  public async getCalendars(params?: any) {\n    return this.get<GCalendarList>(\n      '/calendar/v3/users/me/calendarList',\n      params,\n    );\n  }\n\n  public async getEvents(calendarId: string, params?: any) {\n    return this.get<{ items: GCalendarEvent[] }>(\n      `/calendar/v3/calendars/${encodeURIComponent(calendarId)}/events`,\n      params,\n    );\n  }\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference types=\"@maxim_mazurok/gapi.client.calendar\" />\n\n/** @public */\nexport type GCalendarList = gapi.client.calendar.CalendarList;\n\n/** @public */\nexport type GCalendar = gapi.client.calendar.CalendarListEntry;\n\n/** @public */\nexport type EventAttendee = gapi.client.calendar.EventAttendee;\n\n/** @public */\nexport type GCalendarEvent = gapi.client.calendar.Event &\n  Pick<GCalendar, 'backgroundColor' | 'primary'> &\n  Pick<EventAttendee, 'responseStatus'> & {\n    calendarId?: string;\n  };\n\n/** @public */\nexport enum ResponseStatus {\n  needsAction = 'needsAction',\n  accepted = 'accepted',\n  declined = 'declined',\n  maybe = 'tentative',\n}\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'gcalendar',\n});\n","/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  fetchApiRef,\n  googleAuthApiRef,\n} from '@backstage/core-plugin-api';\nimport { GCalendarApiClient, gcalendarApiRef } from './api';\nimport { rootRouteRef } from './routes';\n\n/** @public */\nexport const gcalendarPlugin = createPlugin({\n  id: 'gcalendar',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: gcalendarApiRef,\n      deps: { authApi: googleAuthApiRef, fetchApi: fetchApiRef },\n      factory(deps) {\n        return new GCalendarApiClient(deps);\n      },\n    }),\n  ],\n});\n\n/** @public */\nexport const HomePageCalendar = gcalendarPlugin.provide(\n  createComponentExtension({\n    name: 'HomePageCalendar',\n    component: {\n      lazy: () =>\n        import('./components/CalendarCard').then(m => m.HomePageCalendar),\n    },\n  }),\n);\n"],"names":["ResponseStatus"],"mappings":"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"}